#!/bin/bash

# Script to restart the ipmi_fancontrol-ng service and telegraf (if present) with an updated script

# Path to the updated script (adjust if different)
SOURCE_SCRIPT="/root/ipmi_fancontrol-ng"
TARGET_SCRIPT="/usr/bin/ipmi_fancontrol-ng"
LOG_FILE="/var/log/ipmi_fancontrol.log"
SERVICE_NAME="ipmi_fancontrol-ng"
TELEGRAF_SERVICE="telegraf"

# Stop the ipmi_fancontrol-ng service
echo "Stopping $SERVICE_NAME service..."
systemctl stop $SERVICE_NAME

# Copy the updated script
echo "Copying $SOURCE_SCRIPT to $TARGET_SCRIPT..."
cp "$SOURCE_SCRIPT" "$TARGET_SCRIPT"

# Set executable permissions
echo "Setting executable permissions on $TARGET_SCRIPT..."
chmod +x "$TARGET_SCRIPT"

# Reload systemd
echo "Reloading systemd daemon..."
systemctl daemon-reload

# Start the ipmi_fancontrol-ng service
echo "Starting $SERVICE_NAME service..."
systemctl start $SERVICE_NAME

# Check if telegraf service exists and restart it
if systemctl list-units --full -all | grep -q "$TELEGRAF_SERVICE"; then
    echo "Telegraf service found, restarting $TELEGRAF_SERVICE..."
    systemctl restart $TELEGRAF_SERVICE
    echo "Checking $TELEGRAF_SERVICE status..."
    systemctl status $TELEGRAF_SERVICE
else
    echo "Telegraf service not found, skipping restart."
fi

# Check ipmi_fancontrol-ng service status
echo "Checking $SERVICE_NAME service status..."
systemctl status $SERVICE_NAME

# Display recent logs
echo "Recent logs from $LOG_FILE:"
tail -n 20 "$LOG_FILE"

# Verify fan speeds
echo "Checking fan speeds via IPMI..."
ipmitool sdr | grep -i fan

# Verify metrics
echo "Checking metrics in /tmp/fan_speed_telegraf..."
tail -n 10 /tmp/fan_speed_telegraf
